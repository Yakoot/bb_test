// Generated by CoffeeScript 1.10.0
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$(function() {
  var MenuView, menu_view;
  MenuView = (function(superClass) {
    extend(MenuView, superClass);

    function MenuView() {
      this.initialize = bind(this.initialize, this);
      return MenuView.__super__.constructor.apply(this, arguments);
    }

    MenuView.prototype.el = $("#menu");

    MenuView.prototype.initialize = function() {
      _.bindAll(this, "render");
      return this.render();
    };

    MenuView.prototype.render = function() {
      return $(this.el).append('<span>test</span>');
    };

    return MenuView;

  })(Backbone.View);
  return menu_view = new MenuView;
});
